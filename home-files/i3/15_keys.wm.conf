#### WM bindings

# [ WS 1        ] [ WS 2       ] [ WS 3   ] [ WS 4 ] [ WS 5   ] [       ]
# [ output next ] [ WS by name ] [ parent ] [      ] [ layout ] [       ]
# [             ] [ left       ] [ down   ] [ up   ] [ right  ] [       ]
# [ back&forth  ] [            ] [ child  ] [      ] [        ] [       ]

### Floating modifier

floating_modifier $W

### Workspaces

bindsym $W+g        $!! i3-workspace "$(i3-workspace-name-prompt 'Workspace')"
bindsym $W+$S+g     $!! i3-move-to-workspace "$(i3-workspace-name-prompt 'Move to Workspace')"

bindsym $W+b        workspace back_and_forth
bindsym $W+$S+b     move container to workspace back_and_forth

bindsym $W+F10      $!! i3-workspace "$(i3-workspace-name-by-idx-on-current-output 1)"
bindsym $W+F2       $!! i3-workspace "$(i3-workspace-name-by-idx-on-current-output 2)"
bindsym $W+F4       $!! i3-workspace "$(i3-workspace-name-by-idx-on-current-output 3)"
bindsym $W+F6       $!! i3-workspace "$(i3-workspace-name-by-idx-on-current-output 4)"
bindsym $W+F8       $!! i3-workspace "$(i3-workspace-name-by-idx-on-current-output 5)"

bindsym $W+F9       $!! i3-workspace "$(i3-workspace-name-by-idx-on-current-output 1)"
bindsym $W+F1       $!! i3-workspace "$(i3-workspace-name-by-idx-on-current-output 2)"
bindsym $W+F3       $!! i3-workspace "$(i3-workspace-name-by-idx-on-current-output 3)"
bindsym $W+F5       $!! i3-workspace "$(i3-workspace-name-by-idx-on-current-output 4)"
bindsym $W+F7       $!! i3-workspace "$(i3-workspace-name-by-idx-on-current-output 5)"

bindsym $W+0        $!! i3-workspace "$(i3-workspace-name-by-idx-on-current-output 1)"
bindsym $W+2        $!! i3-workspace "$(i3-workspace-name-by-idx-on-current-output 2)"
bindsym $W+4        $!! i3-workspace "$(i3-workspace-name-by-idx-on-current-output 3)"
bindsym $W+6        $!! i3-workspace "$(i3-workspace-name-by-idx-on-current-output 4)"
bindsym $W+8        $!! i3-workspace "$(i3-workspace-name-by-idx-on-current-output 5)"

bindsym $W+9        $!! i3-workspace "$(i3-workspace-name-by-idx-on-current-output 1)"
bindsym $W+1        $!! i3-workspace "$(i3-workspace-name-by-idx-on-current-output 2)"
bindsym $W+3        $!! i3-workspace "$(i3-workspace-name-by-idx-on-current-output 3)"
bindsym $W+5        $!! i3-workspace "$(i3-workspace-name-by-idx-on-current-output 4)"
bindsym $W+7        $!! i3-workspace "$(i3-workspace-name-by-idx-on-current-output 5)"

bindsym $W+$S+F10   $!! i3-move-to-workspace "$(i3-workspace-name-by-idx-on-current-output 1)"
bindsym $W+$S+F2    $!! i3-move-to-workspace "$(i3-workspace-name-by-idx-on-current-output 2)"
bindsym $W+$S+F4    $!! i3-move-to-workspace "$(i3-workspace-name-by-idx-on-current-output 3)"
bindsym $W+$S+F6    $!! i3-move-to-workspace "$(i3-workspace-name-by-idx-on-current-output 4)"
bindsym $W+$S+F8    $!! i3-move-to-workspace "$(i3-workspace-name-by-idx-on-current-output 5)"

bindsym $W+$S+F9    $!! i3-move-to-workspace "$(i3-workspace-name-by-idx-on-current-output 1)"
bindsym $W+$S+F1    $!! i3-move-to-workspace "$(i3-workspace-name-by-idx-on-current-output 2)"
bindsym $W+$S+F3    $!! i3-move-to-workspace "$(i3-workspace-name-by-idx-on-current-output 3)"
bindsym $W+$S+F5    $!! i3-move-to-workspace "$(i3-workspace-name-by-idx-on-current-output 4)"
bindsym $W+$S+F7    $!! i3-move-to-workspace "$(i3-workspace-name-by-idx-on-current-output 5)"

bindsym $W+$S+0     $!! i3-move-to-workspace "$(i3-workspace-name-by-idx-on-current-output 1)"
bindsym $W+$S+2     $!! i3-move-to-workspace "$(i3-workspace-name-by-idx-on-current-output 2)"
bindsym $W+$S+4     $!! i3-move-to-workspace "$(i3-workspace-name-by-idx-on-current-output 3)"
bindsym $W+$S+6     $!! i3-move-to-workspace "$(i3-workspace-name-by-idx-on-current-output 4)"
bindsym $W+$S+8     $!! i3-move-to-workspace "$(i3-workspace-name-by-idx-on-current-output 5)"

bindsym $W+$S+9     $!! i3-move-to-workspace "$(i3-workspace-name-by-idx-on-current-output 1)"
bindsym $W+$S+1     $!! i3-move-to-workspace "$(i3-workspace-name-by-idx-on-current-output 2)"
bindsym $W+$S+3     $!! i3-move-to-workspace "$(i3-workspace-name-by-idx-on-current-output 3)"
bindsym $W+$S+5     $!! i3-move-to-workspace "$(i3-workspace-name-by-idx-on-current-output 4)"
bindsym $W+$S+7     $!! i3-move-to-workspace "$(i3-workspace-name-by-idx-on-current-output 5)"

### Focus and movements

bindsym $W+h    focus left
bindsym $W+t    focus down
bindsym $W+n    focus up
bindsym $W+s    focus right

bindsym $W+c    focus parent
bindsym $W+w    focus child

bindsym $W+$S+h  move left
bindsym $W+$S+t  move down
bindsym $W+$S+n  move up
bindsym $W+$S+s  move right

### Outputs

bindsym $W+f     focus output next
bindsym $W+$S+f  move container to output next

### Split/layout

# [ float ] [      ] [      ] [      ] [       ] [       ]
# [       ] [      ] [      ] [      ] [       ] [       ]
# [  def  ] [   -  ] [ tab  ] [      ] [ stack ] [       ]
# [       ] [      ] [      ] [   |  ] [       ] [       ]

set $split_layout_mode "Split/Layout: <b>f</b>loating, <b>h</b>orizontal, <b>v</b>ertical, <b>s</b>tacking, <b>t</b>abbed, <b>d</b>efault"
mode --pango_markup $split_layout_mode {
    bindsym h split h; mode "default"
    bindsym v split v; mode "default"

    bindsym s layout stacking; mode "default"
    bindsym t layout tabbed;   mode "default"
    bindsym d layout default;  mode "default"

    bindsym f floating toggle; mode "default"

    bindsym $C+g mode "default"
    bindsym Escape mode "default"
}

bindsym $W+l mode $split_layout_mode

### Resize mode

set $resize_mode "Resize: [$S+] <b>h</b> <b>t</b> <b>n</b> <b>s</b>"
mode $resize_mode {
    bindsym h         resize grow   left  10 px or 10 ppt
    bindsym $S+h      resize shrink left  10 px or 10 ppt

    bindsym t         resize grow   down  10 px or 10 ppt
    bindsym $S+t      resize shrink down  10 px or 10 ppt

    bindsym n         resize grow   up    10 px or 10 ppt
    bindsym $S+n      resize shrink up    10 px or 10 ppt

    bindsym s         resize grow   right 10 px or 10 ppt
    bindsym $S+s      resize shrink right 10 px or 10 ppt

    bindsym $C+g   mode "default"
    bindsym Escape mode "default"
}

bindsym $W+$S+r mode $resize_mode

### Rest

bindsym $W+q    kill
bindsym $W+$C+r reload

### Ace jump (TODO: ugly - fix)

set $ace_jump_mode "Ace_Jump_Mode"
mode $ace_jump_mode {
    bindsym a [con_mark="a" workspace="__focused__"] focus; mode "default"
    bindsym b [con_mark="b" workspace="__focused__"] focus; mode "default"
    bindsym c [con_mark="c" workspace="__focused__"] focus; mode "default"
    bindsym d [con_mark="d" workspace="__focused__"] focus; mode "default"
    bindsym e [con_mark="e" workspace="__focused__"] focus; mode "default"
    bindsym f [con_mark="f" workspace="__focused__"] focus; mode "default"
    bindsym g [con_mark="g" workspace="__focused__"] focus; mode "default"
    bindsym h [con_mark="h" workspace="__focused__"] focus; mode "default"
    bindsym i [con_mark="i" workspace="__focused__"] focus; mode "default"
    bindsym j [con_mark="j" workspace="__focused__"] focus; mode "default"
    bindsym k [con_mark="k" workspace="__focused__"] focus; mode "default"
    bindsym l [con_mark="l" workspace="__focused__"] focus; mode "default"
    bindsym m [con_mark="m" workspace="__focused__"] focus; mode "default"
    bindsym n [con_mark="n" workspace="__focused__"] focus; mode "default"
    bindsym o [con_mark="o" workspace="__focused__"] focus; mode "default"
    bindsym p [con_mark="p" workspace="__focused__"] focus; mode "default"
    bindsym q [con_mark="q" workspace="__focused__"] focus; mode "default"
    bindsym r [con_mark="r" workspace="__focused__"] focus; mode "default"
    bindsym s [con_mark="s" workspace="__focused__"] focus; mode "default"
    bindsym t [con_mark="t" workspace="__focused__"] focus; mode "default"
    bindsym u [con_mark="u" workspace="__focused__"] focus; mode "default"
    bindsym v [con_mark="v" workspace="__focused__"] focus; mode "default"
    bindsym w [con_mark="w" workspace="__focused__"] focus; mode "default"
    bindsym x [con_mark="x" workspace="__focused__"] focus; mode "default"
    bindsym y [con_mark="y" workspace="__focused__"] focus; mode "default"
    bindsym z [con_mark="z" workspace="__focused__"] focus; mode "default"

    bindsym $C+g   mode "default"
    bindsym Escape mode "default"
}

bindsym $W+j exec --no-startup-id i3-ace-jump.pl
