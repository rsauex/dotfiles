(define-module (rsauex packages powershell)
  #:use-module ((gnu packages base)            #:prefix base:)
  #:use-module ((gnu packages bash)            #:prefix bash:)
  #:use-module ((gnu packages compression)     #:prefix compression:)
  #:use-module ((gnu packages curl)            #:prefix curl:)
  #:use-module ((gnu packages elf)             #:prefix elf:)
  #:use-module ((gnu packages gcc)             #:prefix gcc:)
  #:use-module ((gnu packages icu4c)           #:prefix icu4c:)
  #:use-module ((gnu packages instrumentation) #:prefix instrumentation:)
  #:use-module ((gnu packages less)            #:prefix less:)
  #:use-module ((gnu packages libunwind)       #:prefix libunwind:)
  #:use-module ((gnu packages linux)           #:prefix linux:)
  #:use-module ((gnu packages ncurses)         #:prefix ncurses:)
  #:use-module ((gnu packages tls)             #:prefix tls:)
  #:use-module ((guix build-system trivial)    #:prefix trivial-build-system:)
  #:use-module ((guix download)                #:prefix download:)
  #:use-module ((guix licenses)                #:prefix licenses:)
  #:use-module ((guix packages)))

(define-public powershell
  (package
    (name "powershell")
    (version "7.2.6")
    (source (origin (method download:url-fetch/tarbomb)
                    (uri (string-append "https://github.com/PowerShell/PowerShell/releases/download/v" version "/powershell-" version "-linux-x64.tar.gz"))
                    (sha256 (base32 "1lip3855jgn7m7i62srgi8vhvhcn4xkgxy1q943qddnb9g7zc9wr"))))
    (build-system trivial-build-system:trivial-build-system)
    (arguments (list #:modules '((guix build utils))
                     #:builder `(begin
                                  (use-modules (guix build utils))
                                  (let* ((source (assoc-ref %build-inputs "source"))
                                         (output (assoc-ref %outputs "out"))
                                         (pwsh-output (string-append output "/share/powershell")))
                                    (mkdir-p output)
                                    (mkdir-p pwsh-output)
                                    (copy-recursively source pwsh-output)
                                    (for-each make-file-writable (find-files pwsh-output))
                                    (let* ((patchelf (string-append (assoc-ref %build-inputs "patchelf") "/bin/patchelf"))
                                           (pwsh (string-append pwsh-output "/pwsh")))
                                      (let ((glibc (assoc-ref %build-inputs "glibc")))
                                        (invoke patchelf "--set-interpreter" (string-append glibc "/lib/ld-linux-x86-64.so.2") pwsh))
                                      (let ((rpath (string-append (assoc-ref %build-inputs "gcc:lib") "/lib")))
                                        (invoke patchelf "--set-rpath" rpath pwsh))
                                      (let* ((bin (string-append output "/bin"))
                                             (wrapper (string-append bin "/pwsh"))
                                             (bash (assoc-ref %build-inputs "bash")))
                                        (mkdir-p bin)
                                        (with-output-to-file wrapper
                                          (lambda _
                                            (format #t "#!~a/bin/bash~%" bash)
                                            (format #t "export LD_LIBRARY_PATH='~{~a~^:~}'~%"
                                                    (map (lambda (package)
                                                           (string-append (assoc-ref %build-inputs package) "/lib"))
                                                         '("libunwind" "util-linux" "icu4c" "curl" "openssl" "linux-pam" "lttng-ust" "zlib")))
                                            (format #t "export TERMINFO='~a/share/terminfo'~%" (assoc-ref %build-inputs "ncurses"))
                                            (format #t "exec ~a/pwsh \"$@\"~%" pwsh-output)))
                                        (chmod wrapper #o755)))))))
    (inputs `(("gcc:lib" ,gcc:gcc-9 "lib")
              ("glibc" ,base:glibc)
              ("libunwind" ,libunwind:libunwind)
              ("util-linux" ,linux:util-linux)
              ("icu4c" ,icu4c:icu4c-69)
              ("curl" ,curl:curl)
              ("openssl" ,tls:openssl)
              ("lttng-ust" ,instrumentation:lttng-ust)
              ("linux-pam" ,linux:linux-pam)
              ("less" ,less:less)
              ("bash" ,bash:bash)
              ("ncurses" ,ncurses:ncurses)
              ("zlib" ,compression:zlib)))
    (native-inputs `(("patchelf" ,elf:patchelf)))
    (synopsis "Powershell shell and language")
    (description "Powerfull cross-platform (Windows, Linux and macOS) shell and scripting language based on .NET")
    (home-page "https://github.com/PowerShell/PowerShell")
    (supported-systems (list "x86_64-linux"))
    (license licenses:expat)))
