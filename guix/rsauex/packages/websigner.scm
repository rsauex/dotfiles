(define-module (rsauex packages websigner)
  #:use-module (gnu)
  #:use-module (gnu packages)
  #:use-module (gnu packages base)
  #:use-module (gnu packages bash)
  #:use-module (gnu packages elf)
  #:use-module (gnu packages gcc)
  #:use-module (gnu packages security-token)
  #:use-module (gnu packages compression)
  #:use-module (gnu packages gtk)
  #:use-module (gnu packages glib)
  #:use-module (gnu packages xorg)
  #:use-module (guix packages)
  #:use-module (guix download)
  #:use-module (guix licenses)
  #:use-module (guix build-system trivial))

(define-public aval-websigner
  (package
    (name "aval-websigner")
    (version "2021-04-11")
    (source (origin (method url-fetch)
                    (uri "https://web.aval.ua/websigner-linux.bin")
                    (sha256 (base32 "16zakmzsczcbxg6b22vjfg23m99f8vip4lidf621yn7c0qsm43z1"))))
    (build-system trivial-build-system)
    (arguments (list #:modules '((guix build utils))
                     #:builder `(begin
                                  (use-modules (guix build utils))

                                  (let* ((source (assoc-ref %build-inputs "source"))
                                         (output (assoc-ref %outputs "out")))
                                    (mkdir-p output)
                                    ;; Extract
                                    (let ((PATH (string-join (list (string-append (assoc-ref %build-inputs "coreutils") "/bin")
                                                                   (string-append (assoc-ref %build-inputs "sed") "/bin")
                                                                   (string-append (assoc-ref %build-inputs "tar") "/bin")
                                                                   (string-append (assoc-ref %build-inputs "gzip") "/bin"))
                                                             ":"))
                                          (bash (string-append (assoc-ref %build-inputs "bash") "/bin/bash")))
                                      (setenv "PATH" PATH)
                                      (invoke bash source "--extract"))
                                    ;; Install libraries
                                    (let ((lib-output (string-append output "/lib/websigner/")))
                                      ;; Copy libraries
                                      (install-file "websigner/x86_64-linux/nmwebsigner" lib-output)
                                      (install-file "websigner/x86_64-linux/npwebsigner.so" lib-output)
                                      ;; Patchelf
                                      (let ((patchelf (string-append (assoc-ref %build-inputs "patchelf") "/bin/patchelf")))
                                        ;; Patch interpreter
                                        (let ((glibc (assoc-ref %build-inputs "glibc")))
                                          (invoke patchelf "--set-interpreter" (string-append glibc "/lib/ld-linux-x86-64.so.2") (string-append lib-output "nmwebsigner")))
                                        ;; Patch rpath
                                        (let ((rpath (string-join (list (string-append (assoc-ref %build-inputs "gtk+-2") "/lib")
                                                                        (string-append (assoc-ref %build-inputs "pcsclite") "/lib")
                                                                        (string-append (assoc-ref %build-inputs "glib") "/lib")
                                                                        (string-append (assoc-ref %build-inputs "libx11") "/lib")
                                                                        (string-append (assoc-ref %build-inputs "libxrandr") "/lib")
                                                                        (string-append (assoc-ref %build-inputs "libxinerama") "/lib"))
                                                                  ":")))
                                          (invoke patchelf "--set-rpath" rpath (string-append lib-output "npwebsigner.so"))))
                                      ;; Set executable
                                      (chmod (string-append lib-output "nmwebsigner") #o755)
                                      ;; Install plugins
                                      (let ((firefox-output (string-append output "/lib/websigner/hosts/firefox/"))
                                            (chromium-output (string-append output "/lib/websigner/hosts/chromium/")))
                                        ;; Make directories
                                        (mkdir-p firefox-output)
                                        (mkdir-p chromium-output)
                                        ;; Copy
                                        (copy-file "websigner/com.bifit.websigner-mozilla.json" (string-append firefox-output "com.bifit.websigner.json"))
                                        (copy-file "websigner/com.bifit.websigner-chrome.json" (string-append chromium-output "com.bifit.websigner.json"))
                                        ;; Fix plugin path
                                        (substitute* (string-append firefox-output "com.bifit.websigner.json")
                                          (("PLUGIN_PATH") (string-append lib-output "nmwebsigner")))
                                        (substitute* (string-append chromium-output "com.bifit.websigner.json")
                                          (("PLUGIN_PATH") (string-append lib-output "nmwebsigner")))
                                        ;; Install to native messaging for firefox
                                        (let ((firefox-path (string-append output "/lib/mozilla/native-messaging-hosts/")))
                                          (mkdir-p firefox-path)
                                          (link (string-append firefox-output "com.bifit.websigner.json")
                                                (string-append firefox-path "com.bifit.websigner.json")))
                                        ;; Install to native messaging for chromium
                                        (let ((chromium-path (string-append output "/lib/chromium/NativeMessagingHosts/")))
                                          (mkdir-p chromium-path)
                                          (link (string-append chromium-output "com.bifit.websigner.json")
                                                (string-append chromium-path "com.bifit.websigner.json")))))))))
    (inputs `(("gcc:lib" ,gcc-9 "lib")
              ("glib" ,glib)
              ("glibc" ,glibc)
              ("pcsclite" ,pcsc-lite)
              ("gtk+-2" ,gtk+-2)
              ("libx11" ,libx11)
              ("libxrandr" ,libxrandr)
              ("libxinerama" ,libxinerama)))
    (native-inputs `(("patchelf" ,patchelf)
                     ("bash" ,bash)
                     ("coreutils" ,coreutils)
                     ("sed" ,sed)
                     ("tar" ,tar)
                     ("gzip" ,gzip)))
    (synopsis "Raiffeisen Business Online WebSigner native messaging host")
    (description "Raiffeisen Business Online WebSigner native messaging host")
    (home-page "https://web.aval.ua/web/")
    (supported-systems (list "x86_64-linux"))
    (license expat)))
